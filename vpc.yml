AWSTemplateFormatVersion: 2010-09-09
Description: |
  Creates VPC with a public and private subnet

Parameters:
  VPCCIDRValue:
    Description: 'VPC CIDR Value (10.XXX.0.0/16) [0-255]'
    Type: Number
  Environment:
    Description: |
      Used for tagging.
    Type: String
    AllowedValues:
    - 'Testing'
  BusinessOwner:
    Description: |
      Used for tagging. The person who assumes responsibility for the stack resources.
    Type: String

Resources:
  
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Sub '10.${VPCCIDRValue}.0.0/16'
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: "BusinessOwner"
          Value: !Ref BusinessOwner
        - Key: "Name"
          Value: !Sub ${Environment} VPC
        
  
  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
         Fn::Select:
         - 0
         - Fn::GetAZs: {Ref: 'AWS::Region'}
      VpcId: !Ref 'VPC'
      CidrBlock: !Sub '10.${VPCCIDRValue}.0.0/24'
      MapPublicIpOnLaunch: true
      Tags:
        - Key: "BusinessOwner"
          Value: !Ref BusinessOwner
        - Key: "Name"
          Value: !Sub ${Environment} Public Subnet

  PrivateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
         Fn::Select:
         - 0
         - Fn::GetAZs: {Ref: 'AWS::Region'}
      VpcId: !Ref 'VPC'
      CidrBlock: !Sub '10.${VPCCIDRValue}.10.0/24'
      Tags:
        - Key: "BusinessOwner"
          Value: !Ref BusinessOwner
        - Key: "Name"
          Value: !Sub ${Environment} Private Subnet
  
Outputs:

  VPC:
    Description: 'VPC'
    Value: !Ref VPC

  SubnetsPublic:
    Description: 'Public Subnet'
    Value: !Ref PublicSubnet

  SubnetsPrivate:
    Description: 'Private Subnet'
    Value: !Ref PrivateSubnet